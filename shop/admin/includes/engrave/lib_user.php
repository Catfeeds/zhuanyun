<?php function engrave_user_majuser(){	$sql="";}function GmtToUnix($GmtDate){	$DateArr = explode(' ',$GmtDate); // 分割GMT日期为 日期 | 时间	/* 在日期中取得年,月,日 */	$pDate = explode('-',$DateArr[0]);	$Year = $pDate[0];	$Month = $pDate[1];	$Day = $pDate[2];	/* 在时间中取得时,分,秒 */	$pTime = explode(':',$DateArr[1]);	$Hour = $pTime[0];	$Minute = $pTime[1];	$Second = $pTime[2];	//echo $Hour.'>'.$Minute.'<'.$Second.'>'.$Month.'<'.$Day.'>'.$Year.'<br>';		if($Year == '' || !is_numeric($Year))$Year = 0;	if($Month == '' || !is_numeric($Month))$Month = 0;	if($Day == '' || !is_numeric($Day))$Day = 0;	if($Hour == '' || !is_numeric($Hour))$Hour = 0;	if($Minute == '' || !is_numeric($Minute))$Minute = 0;	if($Second == '' || !is_numeric($Second))$Second = 0;	return mktime($Hour,$Minute,$Second,$Month,$Day,$Year);}/** * 添加会员：带事务 * @param unknown $users：会员对象 * @param unknown $conn：数据库连接对象 * @return $result：若添加失败，返回false！ */function engrave_user_insert($users,$conn){	//UnixToGmt	$users['last_time'] = $users['last_login'];//最后登录	$users['reg_time'] = GmtToUnix($users['reg_time']);//注册时间	$users['last_login'] = GmtToUnix($users['last_login']);//最后登录	//随机生成salt	$salt=rand(1000, 9999);	$users['password'] = compile_password(array('md5password'=>$users['password'],'type'=>PWD_SUF_SALT,'salt'=>$salt));	$users['answer'] = compile_password(array('md5password'=>$users['password'],'type'=>PWD_SUF_SALT,'salt'=>$salt));	$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';	//将入库码转化为5位	$storage_code = $users['storage_code'];	$validate_value=0;	for ($index=0;$index<strlen($storage_code);$index++)	{		//获取每一个字符		$char =substr($storage_code, $index,1);		$strposValue = ($index + 1 ) * (strpos($string, $char)+1);		$validate_value = ($validate_value + $strposValue);	}	$validate_value = $validate_value % strlen($string);	$storage_code .= $string[$validate_value-1];				$sql="insert into ".$GLOBALS['ecs']->table('users').	" (user_name,user_majid,password,email,user_remark,birthday,reg_ip,reg_time,salt,".	"last_login,last_time,last_ip,visit_count,question,answer,sex,user_money,frozen_money,".	"pay_points,credit_line,user_warehouseid,refencer_recommend_code,storage_code,user_storage_code)".	" values ('".	$users['user_name']."','".	$users['user_id']."','".	$users['password']."','".	$users['email']."','".	$users['user_remark']."','".	$users['birthday']."','".	$users['reg_ip']."','".	$users['reg_time']."','".	$salt."','".	$users['last_login']."','".	$users['last_time']."','".	$users['last_ip']."','".	$users['visit_count']."','".	$users['question']."','".	$users['answer']."','".	$users['sex']."','".	$users['user_money']."','".	$users['frozen_money']."','".	$users['pay_points']."','".	$users['credit_line']."','".	$users['user_warehouseid']."','".	$users['refencer_recommend_code']."','".	$users['storage_code']."','".	$storage_code.	"')";	$result = mysql_query($sql,$conn);	return $result;}/** * 修改：事务 * @param unknown $users：用户数组对象 * @param unknown $conn：数据库连接对象 * @return resource：若修失败，返回false！ */function engrave_user_update($users,$conn){		$sql="update ".$GLOBALS['ecs']->table('users').	" set qq='" . $users['qq']."',".	"msn='".$users['msn']."',".	"user_address='".$users['user_address']."',".	"user_zipcode='".$users['user_zipcode']."',".	"user_country='".$users['user_country']."',".	"user_province='".$users['user_province']."',".	"user_city='".$users['user_city']."',".	"user_identitycard='".$users['user_identitycard']."',".	"home_phone='".$users['home_phone']."',".	"mobile_phone='".$users['mobile_phone']."'".	" where user_majid = ".$users['user_id'];		$result = mysql_query($sql,$conn);	return $result;}/** *  编译密码函数 * * @access  public * @param   array   $cfg 包含参数为 $password, $md5password, $salt, $type * * @return void */function compile_password ($cfg){	if (isset($cfg['password']))	{		$cfg['md5password'] = md5($cfg['password']);	}	if (empty($cfg['type']))	{		$cfg['type'] = PWD_MD5;	}	switch ($cfg['type'])	{		case PWD_MD5 :			if(!empty($cfg['ec_salt']))			{				return md5($cfg['md5password'].$cfg['ec_salt']);			}			else			{				return $cfg['md5password'];			}		case PWD_PRE_SALT :			if (empty($cfg['salt']))			{				$cfg['salt'] = '';			}			return md5($cfg['salt'] . $cfg['md5password']);		case PWD_SUF_SALT :			if (empty($cfg['salt']))			{				$cfg['salt'] = '';			}			return md5($cfg['md5password'] . $cfg['salt']);		default:			return '';	}}/** * 获取用户信息 * @param number $user_id：用户ID * @return unknown：用户数据对象 */function engrave_user_byid($user_id=0){	$sql="select user_id,email,user_name,password,question,answer,sex,birthday,user_money,frozen_money,user_subsidiarymoney,user_jpymoney,pay_points,rank_points,address_id,reg_time,last_login,last_time,last_ip,visit_count,user_rank,is_special,ec_salt,salt,parent_id,flag,alias,msn,qq,office_phone,home_phone,mobile_phone,is_validated,credit_line,passwd_question,passwd_answer,recommend_code,reg_ip,storage_code,refencer_recommend_code,isdelete,user_identitycard,user_country,user_province,user_city,user_address,user_zipcode,user_taobaowangwang,user_wechat,user_remark,user_isperfect,user_warehouseid,user_headsculpture from ".$GLOBALS['ecs']->table('users').	" where user_id=".$user_id;		$result = $GLOBALS['db']->getRow($sql);	return $result;}/** * 获取用户信息 * @param number $storage_code：用户 入库码 * @return unknown：用户数据对象 */function engrave_user_by_storage_code($storage_code=''){	$sql="select user_id,email,user_name,password,question,answer,sex,birthday,	user_money,frozen_money,user_subsidiarymoney,user_jpymoney,pay_points,	rank_points,address_id,reg_time,last_login,last_time,last_ip,visit_count,user_rank,	is_special,ec_salt,salt,parent_id,flag,alias,msn,qq,office_phone,home_phone,	mobile_phone,is_validated,credit_line,passwd_question,passwd_answer,recommend_code,	reg_ip,storage_code,refencer_recommend_code,isdelete,user_identitycard,user_country,	user_province,user_city,user_address,user_zipcode,user_taobaowangwang,	user_wechat,user_remark,user_isperfect,user_warehouseid,user_headsculpture	 from ".$GLOBALS['ecs']->table('users').	" where storage_code='".$storage_code."'";		$result = $GLOBALS['db']->getRow($sql);	return $result;}/** * 支付 * @param number $pay_money：支付金额 * @param number $user_money：主账户余额 * @param number $user_jpymoney：日元账户余额 * @param number $user_subsidiary：副账户余额 * @param number $exchageRate：日元汇率 * @param number $pay_points：积分 * @param number $user_id：用户ID * @param number $order_paymenttype：支付方式；1：日元；2：主账户；3：副账户 * @param string $conn：数据库连接对象 * @return boolean：若支付成功，返回true，反之，返回false！ */function engrave_users_pay_money($pay_money=0,$user_money=0,$user_jpymoney=0,$user_subsidiary=0,$exchageRate=0,$pay_points=0,$user_id=0,$order_paymenttype=1,$conn,$user_payment_type){	/**	 * 1：先使用日元账户：需要将日元金额转化为默认货币下	 * 2：再使用主账户	 * 3：最后使用副账户	 */	$sql = 'update ' . $GLOBALS['ecs']->table("users").' set pay_points=pay_points-'.$pay_points;	if($user_payment_type == "月结") {        $sql .= ",user_month_ordermoney = user_month_ordermoney-".$pay_money;    } else {        switch ($order_paymenttype)        {            case 1:                //日元账户金额不足                if($user_jpymoney < round(($pay_money*$exchageRate),2))                {                    $pay_money = $pay_money - $user_jpymoney;                    $sql .= ", user_jpymoney = 0";                    /**                     * 主账户金额不足                     */                    if($user_money < $pay_money)                    {                        $pay_money = $pay_money - $user_money;                        $sql .= ",user_money = 0";                        /**                         * 副账户余额不足：此时前端出现问题，正常情况下不会出现余额不足                         */                        if($user_subsidiary < $pay_money)                        {                            return false;                        }                        else{                            $sql .= ",user_subsidiarymoney = user_subsidiarymoney-".$pay_money;                        }                    }                    else{                        $sql .= ",user_money = user_money-".$pay_money;                    }                }                /**                 * 日元账户金额足够                 */                else{                    $sql .= " , user_jpymoney = user_jpymoney-".round(($pay_money*$exchageRate),2);                }                break;            case 2:                //主账户金额不足                if($user_money < $pay_money)                {                    $pay_money = $pay_money - $user_money;                    $sql .= ", user_money = 0";                    /**                     * 日元账户金额不足                     */                    if($user_jpymoney < round(($pay_money*$exchageRate),2))                    {                        $pay_money = $pay_money - $user_jpymoney;                        $sql .= ",user_jpymoney = 0";                        /**                         * 副账户余额不足：此时前端出现问题，正常情况下不会出现余额不足                         */                        if($user_subsidiary < $pay_money)                        {                            return false;                        }                        else{                            $sql .= ",user_subsidiarymoney = user_subsidiarymoney-".$pay_money;                        }                    }                    /**                     * 日元账户足够                     */                    else{                        $sql .= ",user_jpymoney = user_jpymoney-".round(($pay_money*$exchageRate),2);                    }                }                /**                 * 主账户金额足够                 */                else{                    $sql .= " , user_money = user_money-".$pay_money;                }                break;            case 3:                //副账户金额不足                if($user_subsidiary < $pay_money)                {                    $pay_money = $pay_money - $user_subsidiary;                    $sql .= ", user_subsidiarymoney = 0";                    /**                     * 日元账户金额不足                     */                    if($user_jpymoney < round(($pay_money*$exchageRate),2))                    {                        $pay_money = $pay_money - $user_jpymoney;                        $sql .= ",user_jpymoney = 0";                        /**                         * 主账户余额不足：此时前端出现问题，正常情况下不会出现余额不足                         */                        if($user_money < $pay_money)                        {                            return false;                        }                        else{                            $sql .= ",user_money = user_money-".$pay_money;                        }                    }                    /**                     * 日元账户足够                     */                    else{                        $sql .= ",user_jpymoney = user_jpymoney-".round(($pay_money*$exchageRate),2);                    }                }                /**                 * 副账户金额足够                 */                else{                    $sql .= " , user_subsidiarymoney = user_subsidiarymoney-".$pay_money;                }                break;        }    }	$sql .= " where user_id=".$user_id;	$res = mysql_query($sql,$conn);	if($res!==false)	{		return  true;	}	else	{		return false;	}}function engrave_income_insert($order, $totalmoneny,$user_payment_type, $conn) {    $income_status = "已收";    if($user_payment_type == "月结") {        $income_status = "未收";    }    $year = date('Y');    $month = date('n');    $day = date('j');    $sql="insert into ".$GLOBALS['engrave']->table('income').        "(income_add_time  ,income_status,income_user_id,income_username,income_order_id,income_order_sn,income_user_payment_type,        income_amount,income_add_year,income_add_month,income_add_day        ) values('".        time()."','".        $income_status."','".        $order['user_id']."','".        $order['user_name']."','".        $order['order_id']."','".        $order['order_no']."','".        $user_payment_type."','".        $totalmoneny."','".        $year."','".        $month."','".        $day."')";    $result = mysql_query($sql,$conn);    if($result===false)    {        return false;    }else {        return true;    }}?>