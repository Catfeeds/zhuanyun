<?php/** * * */require_once 'JSON.php';class FileUpload{	//文件保存目录路径	var $save_path;	//文件保存目录URL	var $save_url;	//定义允许上传的文件扩展名	var $ext_arr;	var $ext_image;	//最大文件大小	var $max_size;	function __construct() {		$this->save_path = (ROOT_PATH . '/engraveuploads/');		$this->save_url=(dirname($_SERVER['PHP_SELF']) . '/engraveuploads/');		$this->max_size= 1000000;		$this->ext_arr = array(		'image' => array('gif', 'jpg', 'jpeg', 'png', 'bmp'),		'flash' => array('swf', 'flv'),		'media' => array('swf', 'flv', 'mp3', 'wav', 'wma', 'wmv', 'mid', 'avi', 'mpg', 'asf', 'rm', 'rmvb'),		'file' => array('doc', 'docx', 'xls', 'xlsx', 'ppt', 'htm', 'html', 'txt', 'zip', 'rar', 'gz', 'bz2'),		);		$this->ext_image = array('image' => array('gif', 'jpg', 'jpeg', 'png', 'bmp'));	}	/**	 * 上传	 */	function upload($file)	{		$this->save_path = (ROOT_PATH . '/engraveuploads/');		$this->save_url=(dirname($_SERVER['PHP_SELF']) . '/engraveuploads/');		if($file['error'])		{			return "";		}		//PHP上传失败		if (!empty($file['error'])) {			switch($file['error']){				case '1':					$error = '超过php.ini允许的大小。';					break;				case '2':					$error = '超过表单允许的大小。';					break;				case '3':					$error = '图片只有部分被上传。';					break;				case '4':					$error = '请选择图片。';					break;				case '6':					$error = '找不到临时目录。';					break;				case '7':					$error = '写文件到硬盘出错。';					break;				case '8':					$error = 'File upload stopped by extension。';					break;				case '999':				default:					$error = '未知错误。';			}			$this->alert($error);		}		//有上传文件时		if (empty($file) === false) {			//原文件名			$file_name = $file['name'];			$file_name_suffix =substr($file_name, strrpos($file_name, '.')+1);			//检查目录名			$dir_name = 'image';			foreach ($this->ext_arr as $key=>$value)			{				if( is_array($value) )				{					foreach( $value as $valuetemp)					{						if($valuetemp==$file_name_suffix)						{							$dir_name=$key;							break;						}					}				}			}			//服务器上临时文件名			$tmp_name = $file['tmp_name'];			//文件大小			$file_size = $file['size'];			//检查文件名			if (!$file_name) {				$this->alert("请选择文件。");			}			//检查目录			if (@is_dir($this->save_path) === false) {				$this->alert("上传目录不存在。");			}			//检查目录写权限			if (@is_writable($this->save_path) === false) {				$this->alert("上传目录没有写权限。");			}			//检查是否已上传			if (@is_uploaded_file($tmp_name) === false) {				$this->alert("上传失败。");			}			//检查文件大小			if ($file_size > $this->max_size) {				$this->alert("上传文件大小超过限制。");			}			if (empty($this->ext_arr[$dir_name])) {				$this->alert("目录名不正确。");			}			//获得文件扩展名			$temp_arr = explode(".", $file_name);			$file_ext = array_pop($temp_arr);			$file_ext = trim($file_ext);			$file_ext = strtolower($file_ext);			//检查扩展名			if (in_array($file_ext, $this->ext_arr[$dir_name]) === false) {				$this->alert("上传文件扩展名是不允许的扩展名。\n只允许" . implode(",", $this->ext_arr[$dir_name]) . "格式。");			}			//创建文件夹			if ($dir_name !== '') {				$this->save_path .= $dir_name . "/";				$this->save_url .= $dir_name . "/";				if (!file_exists($this->save_path)) {					mkdir($this->save_path);				}			}			$ymd = date("Ymd");			$this->save_path .= $ymd . "/";			$this->save_url .= $ymd . "/";			if (!file_exists($this->save_path)) {				mkdir($this->save_path);			}			//新文件名			$new_file_name = date("YmdHis") . '_' . rand(10000, 99999) . '.' . $file_ext;			//移动文件			$file_path = $this->save_path . $new_file_name;			if (move_uploaded_file($tmp_name, $file_path) === false) {				$this->alert("上传文件失败。");			}			@chmod($file_path, 0644);			$file_url = $this->save_url . $new_file_name;						return $file_url;		}	}		/**	 * 上传	 */	function upload_image($file)	{		$this->save_path = (ROOT_PATH . '/engraveuploads/');		$this->save_url=(dirname($_SERVER['PHP_SELF']) . '/engraveuploads/');		if($file['error'])		{			return "";		}		//PHP上传失败		if (!empty($file['error'])) {			switch($file['error']){				case '1':					$error = '超过php.ini允许的大小。';					break;				case '2':					$error = '超过表单允许的大小。';					break;				case '3':					$error = '图片只有部分被上传。';					break;				case '4':					$error = '请选择图片。';					break;				case '6':					$error = '找不到临时目录。';					break;				case '7':					$error = '写文件到硬盘出错。';					break;				case '8':					$error = 'File upload stopped by extension。';					break;				case '999':				default:					$error = '未知错误。';			}			$this->alert($error);		}		//有上传文件时		if (empty($file) === false) {			//原文件名			$file_name = $file['name'];			$file_name_suffix =substr($file_name, strrpos($file_name, '.')+1);			//检查目录名			$dir_name = 'image';			foreach ($this->ext_image as $key=>$value)			{				if( is_array($value) )				{					foreach( $value as $valuetemp)					{						if($valuetemp==$file_name_suffix)						{							$dir_name=$key;							break;						}					}				}			}			//服务器上临时文件名			$tmp_name = $file['tmp_name'];			//文件大小			$file_size = $file['size'];			//检查文件名			if (!$file_name) {				$this->alert("请选择文件。");			}			//检查目录			if (@is_dir($this->save_path) === false) {				$this->alert("上传目录不存在。");			}			//检查目录写权限			if (@is_writable($this->save_path) === false) {				$this->alert("上传目录没有写权限。");			}			//检查是否已上传			if (@is_uploaded_file($tmp_name) === false) {				$this->alert("上传失败。");			}			//检查文件大小			if ($file_size > $this->max_size) {				$this->alert("上传文件大小超过限制。");			}			if (empty($this->ext_arr[$dir_name])) {				$this->alert("目录名不正确。");			}			//获得文件扩展名			$temp_arr = explode(".", $file_name);			$file_ext = array_pop($temp_arr);			$file_ext = trim($file_ext);			$file_ext = strtolower($file_ext);			//检查扩展名			if (in_array($file_ext, $this->ext_arr[$dir_name]) === false) {				$this->alert("上传文件扩展名是不允许的扩展名。\n只允许" . implode(",", $this->ext_arr[$dir_name]) . "格式。");			}			//创建文件夹			if ($dir_name !== '') {				$this->save_path .= $dir_name . "/";				$this->save_url .= $dir_name . "/";				if (!file_exists($this->save_path)) {					mkdir($this->save_path);				}			}			$ymd = date("Ymd");			$this->save_path .= $ymd . "/";			$this->save_url .= $ymd . "/";			if (!file_exists($this->save_path)) {				mkdir($this->save_path);			}			//新文件名			$new_file_name = date("YmdHis") . '_' . rand(10000, 99999) . '.' . $file_ext;			//移动文件			$file_path = $this->save_path . $new_file_name;			if (move_uploaded_file($tmp_name, $file_path) === false) {				$this->alert("上传文件失败。");			}			@chmod($file_path, 0644);			$file_url = $this->save_url . $new_file_name;			if(substr($file_url, 0, 2 ) == "//")			{				$file_url = substr($file_url,1,strlen($file_url)-1);			}			return $file_url;		}	}		/**	 * 提示	 * @param unknown $msg	 */	function alert($msg) {				//header('<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />');		echo $msg;// 		$json = new Services_JSON();// 		echo $json->encode(array('error' => 1, 'message' => $msg));		exit;	}}